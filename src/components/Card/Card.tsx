/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/Aze3/Aze3.gltf -t -t public 
*/

import * as THREE from 'three'
import React, { MutableRefObject, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh
    Mesh_1: THREE.Mesh
    Mesh_2: THREE.Mesh
  }
  materials: {
    ['A and Spade Extrusion']: THREE.MeshStandardMaterial
    ['Card Front']: THREE.MeshStandardMaterial
    ['Card Back']: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Card(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Aze/Aze.gltf') as GLTFResult
  const meshRef: MutableRefObject<THREE.Object3D | undefined> = useRef();
  const [center, setCenter] = useState<THREE.Vector3 | null>(null);

  useFrame(() => {
    if (meshRef.current) {
      document.addEventListener('mousemove', handleMouseMove);
    }
  });

  const handleMouseMove = (event: MouseEvent) => {
    if (meshRef.current) {
      const mouseX = event.clientX;
      const mouseY = event.clientY;
      const rotationX = (mouseX / window.innerWidth) * 2 - 1;
      const rotationY = -(mouseY / window.innerHeight) * 2 + 1;
      meshRef.current.rotation.y = rotationX * Math.PI;
      meshRef.current.rotation.x = rotationY * Math.PI;
    }
  };

  useFrame(() => {
    if (meshRef.current && center) {
      meshRef.current.position.copy(center).multiplyScalar(1);
    }
  });

  return (
    // @ts-ignore
    <group {...props} dispose={null} ref={meshRef} scale={40}>
      <group  rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Mesh.geometry} material={materials['A and Spade Extrusion']} />
        <mesh geometry={nodes.Mesh_1.geometry} material={materials['Card Front']} />
        <mesh geometry={nodes.Mesh_2.geometry} material={materials['Card Back']} />
      </group>
    </group>
  )
}

useGLTF.preload('/Aze/Aze.gltf')
